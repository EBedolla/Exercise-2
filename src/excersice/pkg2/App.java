/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package excersice.pkg2;


import connection.Conn;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eduar
 */
public class App extends javax.swing.JFrame {

    DefaultTableModel modelo=new DefaultTableModel();
     public App() {
        initComponents();
        limpiar();
        mostrarData();
    }
    void limpiar (){
        namejTextField.setText("");
        PrecioTextField2.setText("");
        inventariojTextField3.setText("");
        unidadTextField1.setText("");
        buscarTextField1.setText("");
    }
     double total ;
      String idToUpdate = "";
    /**
     * Creates new form App
     */
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreateButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        namejTextField = new javax.swing.JTextField();
        unidadTextField1 = new javax.swing.JTextField();
        PrecioTextField2 = new javax.swing.JTextField();
        inventariojTextField3 = new javax.swing.JTextField();
        buscarTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        DataTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CreateButton.setText("Create");
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Buscar");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre: ");

        jLabel2.setText("Unidad de Medida: ");

        jLabel3.setText("Precio: ");

        jLabel4.setText("Inventario: ");

        inventariojTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventariojTextField3ActionPerformed(evt);
            }
        });
        inventariojTextField3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                inventariojTextField3PropertyChange(evt);
            }
        });

        DataTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DataTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DataTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(DataTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel1)))
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(PrecioTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                .addComponent(inventariojTextField3))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(unidadTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                .addComponent(namejTextField, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(344, 344, 344))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(buscarTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(searchButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(CreateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateButton)
                .addGap(168, 168, 168)
                .addComponent(deleteButton)
                .addGap(117, 117, 117))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buscarTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(namejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(unidadTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(PrecioTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(inventariojTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteButton)
                            .addComponent(updateButton)
                            .addComponent(CreateButton))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(searchButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(308, 308, 308))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        Conn cn = new Conn();
        Connection connection = cn.MakeConnection();
        String sql = "insert into"
                + " materiales (product_name, measure_unit, product_price, product_stock, products_total_price)"
                + "VALUES (?,?,?,?,?)";
        try {
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.setString(1, namejTextField.getText());
            pst.setString(2, unidadTextField1.getText());
            double price = Double.parseDouble(PrecioTextField2.getText());
            pst.setString(3, PrecioTextField2.getText());
            pst.setString(4, inventariojTextField3.getText());
            double stock = Double.parseDouble(PrecioTextField2.getText());
            total = stock * price;
            pst.setString(5, ""+total);
            
            int result = pst.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(null, "Registro Guardado correctamente");
            }
            CleanFields();
            mostrarData();
            pst.close();
            connection.close();
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Error al guardar: " +e);
        }
        

    }//GEN-LAST:event_CreateButtonActionPerformed

    private void inventariojTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventariojTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inventariojTextField3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.show(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void inventariojTextField3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_inventariojTextField3PropertyChange
      
    }//GEN-LAST:event_inventariojTextField3PropertyChange

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
         Conn cn = new Conn();
        Connection connection = cn.MakeConnection();
        String sql = "";
        String [] titulos = {"id","Nombre", "Medida", "Precio", "Inventario", "Total"};
        String [] registros = new String[6];
       
            sql = "select * from materiales where product_name LIKE '%" + buscarTextField1.getText()+ "%'";
        modelo = new DefaultTableModel(null, titulos);
        try {
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                registros[0] = rs.getString("Id");
                registros[1] = rs.getString("product_name");
                registros[2] = rs.getString("measure_unit");
                registros[3] = rs.getString("product_price");
                registros[4] = rs.getString("product_stock");
                registros[5] = rs.getString("products_total_price");
                modelo.addRow(registros);
            }
            
            rs.close();
            DataTable2.setModel(modelo);
            connection.close();
            
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Error al cargar " +e);
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed

        Conn cn = new Conn();
        Connection connection = cn.MakeConnection();
        String sql = "UPDATE"
                + " materiales SET product_name=?, measure_unit=?, product_price=?, product_stock=?, products_total_price=? WHERE id=?";        
        try {
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.setString(1, namejTextField.getText());
            pst.setString(2, unidadTextField1.getText());
            double price = Double.parseDouble(PrecioTextField2.getText());
            pst.setString(3, PrecioTextField2.getText());
            pst.setString(4, inventariojTextField3.getText());
            double stock = Double.parseDouble(inventariojTextField3.getText());
            total = stock * price;
            pst.setString(5, ""+total);
            pst.setString(6, idToUpdate);
             int result = pst.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(null, "Registro Guardado correctamente");
            }
            CleanFields();
            mostrarData();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al editar " +e);
        }
    }//GEN-LAST:event_updateButtonActionPerformed
public void CleanFields(){
            namejTextField.setText("");
            unidadTextField1.setText("");
            PrecioTextField2.setText("");
            inventariojTextField3.setText("");
            idToUpdate = "";
}
public void mostrarData(){
    Conn cn = new Conn();
        Connection connection = cn.MakeConnection();
        String sql = "";
        String [] titulos = {"id","Nombre", "Medida", "Precio", "Inventario", "Total"};
        String [] registros = new String[6];
       
            sql = "select * from materiales";
        modelo = new DefaultTableModel(null, titulos);
        try {
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                registros[0] = rs.getString("Id");
                registros[1] = rs.getString("product_name");
                registros[2] = rs.getString("measure_unit");
                registros[3] = rs.getString("product_price");
                registros[4] = rs.getString("product_stock");
                registros[5] = rs.getString("products_total_price");
                modelo.addRow(registros);
            }
            
            rs.close();
            DataTable2.setModel(modelo);
            connection.close();
            
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Error al cargar " +e);
        }

    
    
}
    private void DataTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DataTable2MouseClicked
        int fila;
    
        fila = DataTable2.getSelectedRow();
        if(fila >= 0){
            idToUpdate = DataTable2.getValueAt(fila, 0).toString();
            namejTextField.setText(DataTable2.getValueAt(fila, 1).toString());
            unidadTextField1.setText(DataTable2.getValueAt(fila, 2).toString());
            PrecioTextField2.setText(DataTable2.getValueAt(fila, 3).toString());
            inventariojTextField3.setText(DataTable2.getValueAt(fila, 4).toString());
        }
        else{
            JOptionPane.showMessageDialog(null, "debe seleccionar una fila");
        }
    }//GEN-LAST:event_DataTable2MouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
       Conn cn = new Conn();
        Connection connection = cn.MakeConnection();
        String sql = "DELETE from materiales where id =?";
        try {
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.setString(1, idToUpdate);
            int result = pst.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(null, "Registro Eliminado correctamente");
            }
           
            CleanFields();
            mostrarData();
            pst.close();
            connection.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al eliminar: " +e);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateButton;
    private javax.swing.JTable DataTable2;
    private javax.swing.JTextField PrecioTextField2;
    private javax.swing.JTextField buscarTextField1;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField inventariojTextField3;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField namejTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField unidadTextField1;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
